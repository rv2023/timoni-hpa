apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 0.0.0-devel
  name: myapp
  namespace: test
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 0.0.0-devel
  name: myapp
  namespace: test
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: myapp
  type: ClusterIP
---
apiVersion: v1
data:
  index.html: "<!doctype html>\n<html lang=\"en\">\n<head>\n \t<meta charset=\"utf-8\">\n
    \t<meta http-equiv=\"refresh\" content=\"10\" />\n\t<title>myapp</title>\n\t<style>\n\thtml
    { color-scheme: light dark; }\n\tbody { width: 35em; margin: 0 auto;\n\tfont-family:
    Tahoma, Verdana, Arial, sans-serif; }\n\t</style>\n</head>\n<body>\n\t<h1> Hello
    World from myapp!</h1>\n\t<p>If you see this page, the <b>myapp</b> instance is
    successfully deployed in the <b>test</b> namespace by Timoni.</p>\n</body>\n</html>"
  nginx.default.conf: "server {\n\tlisten       8080;\n\tserver_name  myapp;\n\n\tlocation
    / {\n  \troot   /usr/share/nginx/html;\n  \tindex  index.html index.htm;\n\t}\n\n\tlocation
    /healthz {\n\t\taccess_log off;\n\t\tdefault_type text/plain;\n\t\treturn 200
    \"OK\";\n\t}\n\n\terror_page  404              /404.html;\n  error_page  500 502
    503 504  /50x.html;\n  location = /50x.html {\n    root   /usr/share/nginx/html;\n
    \ }\n}"
immutable: true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 0.0.0-devel
  name: myapp-04a9a366
  namespace: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: timoni
    app.kubernetes.io/name: myapp
    app.kubernetes.io/version: 0.0.0-devel
  name: myapp
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: myapp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: myapp
    spec:
      containers:
      - image: cgr.dev/chainguard/nginx:1.25.3@sha256:3dd8fa303f77d7eb6ce541cb05009a5e8723bd7e3778b95131ab4a2d12fadb8f
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: myapp
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - NET_BIND_SERVICE
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: config
        - mountPath: /usr/share/nginx/html
          name: html
      serviceAccountName: myapp
      volumes:
      - configMap:
          items:
          - key: nginx.default.conf
            path: nginx.default.conf
          name: myapp-04a9a366
        name: config
      - configMap:
          items:
          - key: index.html
            path: index.html
          name: myapp-04a9a366
        name: html
---
